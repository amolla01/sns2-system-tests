version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - '2181:2181'
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      default:
        aliases:
          - zookeeper.internal-service
  kafka01.internal-service:
    image: confluentinc/cp-kafka:5.3.0
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
#    hostname: kafka01
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka01.internal-service:9092
  kafka02.internal-service:
    image: confluentinc/cp-kafka:5.3.0
    depends_on:
      - zookeeper
    ports:
      - '9093:9093'
#    hostname: kafka02
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka02.internal-service:9093
  kafka03.internal-service:
    image: confluentinc/cp-kafka:5.3.0
    depends_on:
      - zookeeper
    ports:
      - '9094:9094'
#    hostname: kafka03
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper.internal-service:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka03.internal-service:9094
  #  kafka-manager:
  #    image: sheepkiller/kafka-manager
  #    ports:
  #      - "9000:9000"
  #    hostname: kafka-manager.internal-service
  #    environment:
  #      ZK_HOSTS: zookeeper.internal-service:2181
  #      APPLICATION_SECRET: littlepig-letmein
  #      KM_VERSION: 1.3.3.17
  #    depends_on:
  #      - zookeeper
  #      - kafka01.internal-service

#    schema-registry:
  #    image: confluentinc/cp-schema-registry:latest
  #    depends_on:
  #      - zookeeper
  #      - kafka01.internal-service
  #      - kafka02.internal-service
  #      - kafka03.internal-service
  #    ports:
  #      - '8081:8081'
  #    environment:
  #      SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper.internal-service:2181
  h2:
    image: nemerosa/h2
    ports:
      - 9082:9082
  kafka-connect:
    build: kafka-connect
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka01.internal-service:9092,kafka02.internal-service:9093,kafka03.internal-service:9094
      CONNECT_REST_ADVERTISED_PORT: 8083
      CONNECT_GROUP_ID: connect
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offset
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      #      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CONNECT_PLUGIN_PATH: "/usr/share/java"
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: 'no.sysco.middleware.kafka.interceptor.zipkin.TracingProducerInterceptor'
      CONNECT_PRODUCER_ZIPKIN_SENDER_TYPE: "HTTP"
      CONNECT_PRODUCER_ZIPKIN_HTTP_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      CONNECT_PRODUCER_ZIPKIN_LOCAL_SERVICE_NAME: "kafka-connect"
      CONNECT_CONSUMER_ZIPKIN_SENDER_TYPE: "HTTP"
      CONNECT_CONSUMER_ZIPKIN_HTTP_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      CONNECT_CONSUMER_ZIPKIN_LOCAL_SERVICE_NAME: "kafka-connect"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "no.sysco.middleware.kafka.interceptor.zipkin.TracingConsumerInterceptor"
    depends_on:
      - kafka01.internal-service
      - h2
  kafka-ksql:
    build: kafka-ksql
    ports:
      - 8088:8088
    environment:
      KSQL_BOOTSTRAP_SERVERS: kafka01.internal-service:9092,kafka02.internal-service:9093,kafka03.internal-service:9094
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksql_sid
      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "no.sysco.middleware.kafka.interceptor.zipkin.TracingConsumerInterceptor"
      KSQL_ZIPKIN_SENDER_TYPE: "HTTP"
      KSQL_ZIPKIN_HTTP_ENDPOINT: "http://zipkin:9411/api/v2/spans"
      KSQL_ZIPKIN_LOCAL_SERVICE_NAME: "kafka-ksql"
      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "no.sysco.middleware.kafka.interceptor.zipkin.TracingProducerInterceptor"
    depends_on:
      - kafka01.internal-service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.2
    ports:
      - 9200:9200
    environment:
      - xpack.security.enabled=false
      - cluster.name=orders
  kibana:
    image: docker.elastic.co/kibana/kibana:6.6.2
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
  grafana:
    container_name: grafana
    image: grafana/grafana:5.2.4
    ports:
      - 3000:3000
    environment:
      GRAFANA_HOST: grafana
#    volumes:
#      - $PWD/ksql/ksql-clickstream-demo/demo:/scripts
  zipkin:
    image: openzipkin/zipkin:2.12.6
    environment:
      STORAGE_TYPE: mem
      KAFKA_BOOTSTRAP_SERVERS: kafka01.internal-service:9092
    ports:
      - 9411:9411
    depends_on:
      - kafka01.internal-service
